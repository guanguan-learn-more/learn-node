{"version":3,"file":"lib-login.js","sources":["../../../projects/lib-login/src/environments/environment.ts","../../../projects/lib-login/src/services/api.service.ts","../../../projects/lib-login/src/services/user.service.ts","../../../projects/lib-login/src/lib/usermanagement/userlist/userlist.component.ts","../../../projects/lib-login/src/lib/usermanagement/userlist/userlist.component.html","../../../projects/lib-login/src/lib/counter/counter.component.ts","../../../projects/lib-login/src/lib/counter/counter.component.html","../../../projects/lib-login/src/services/auth.service.ts","../../../projects/lib-login/src/state/user/user.store.ts","../../../projects/lib-login/src/state/user/user.query.ts","../../../projects/lib-login/src/lib/login/login.component.ts","../../../projects/lib-login/src/lib/login/login.component.html","../../../projects/lib-login/src/lib/lib-login.service.ts","../../../projects/lib-login/src/lib/lib-login.component.ts","../../../projects/lib-login/src/common/common-material/common-material.module.ts","../../../projects/lib-login/src/lib/lib-login.module.ts","../../../projects/lib-login/src/public-api.ts","../../../projects/lib-login/src/lib-login.ts"],"sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: {\r\n    // baseUrl: \"http://localhost:5001\",\r\n    baseUrl: \"https://solution-finder-demo.capgemini.com:5001\",\r\n    auth: {\r\n      login: \"/login\",\r\n      userAuthentication: \"/UserAuthentication\",\r\n      changePassword: \"/api/changePassword\",\r\n      getUsers: \"/api/users\",\r\n      jwtToken: \"/token\",      \r\n      user_like: \"/api/UserFeedBack\",\r\n      user_snowlike:\"/api/SNOWFeedBack/\",      \r\n      searchSolution: \"/api/SearchSolution\",\r\n      searchSolutionDetail: \"/api/SearchSolutionById\",\r\n      updateUser: \"/api/updateUser\",\r\n      activeUser: \"/api/activateUser/\",\r\n      deleteUser: \"/api/deleteUser/\",\r\n      getUser:\"/api/getUser/\"\r\n    }\r\n  },\r\n  keys:{\r\n    ENCRYPT_DECRYPT_KEY:\"*$0lut!0nf!nder*\",\r\n    IV:'I8zyA4lVhMCaJ5Kg'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n\r\n\r\n  // GET request\r\n  fetchGetUrl(\r\n    url: string,\r\n    data?: any\r\n  ): Observable<any> {\r\n    return this.http.get(url, data);\r\n  }\r\n\r\n  // POST request\r\n  fetchPostUrl(\r\n    url: string,\r\n    data = null\r\n  ): Observable<any> {\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  // PUT request\r\n  fetchPutUrl(\r\n    url: string,\r\n    data = null\r\n  ): Observable<any> {\r\n    return this.http.put(url, data);\r\n  }\r\n\r\n  // DELETE request\r\n  fetchDelete(url: string): Observable<any> {\r\n    return this.http.delete(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../environments/environment';\r\nimport { UserQuery } from '../state/user/user.query';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  environment = environment;\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  getUserData(): Observable<any> {   \r\n    const url = `${this.environment.api.baseUrl}${this.environment.api.auth.getUsers}`;\r\n    return this.apiService.fetchGetUrl(url);\r\n  }  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\n\n@Component({\n  selector: 'lib-userlist',\n  templateUrl: './userlist.component.html',\n  styleUrls: ['./userlist.component.scss']\n})\nexport class UserlistComponent implements OnInit {\n  userData = [];\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllUserList();\n  }\n\n  getAllUserList(){\n    this.userService.getUserData()\n        .subscribe(res => { \n          this.userData = res;         \n          console.log(\"user data\", res);\n        },\n    );\n  }\n\n}\n","<p>userlist works!</p>\n<!-- <mat-list>\n    <mat-list-item> Pepper </mat-list-item>\n    <mat-list-item> Salt </mat-list-item>\n    <mat-list-item> Paprika </mat-list-item>\n</mat-list> -->\n<div class=\"solution-body-container\">\n    <div class=\"overlay\" *ngIf=\"isLoaderShow\">\n        <mat-progress-spinner [mode]=\"'indeterminate'\" diameter=\"70\"></mat-progress-spinner>\n    </div>\n    <ng-container *ngIf=\"searchData.length > 0 && !isLoaderShow \">\n        <div>User List </div>\n        <mat-grid-list cols=\"8\" rowHeight=\"80px\">\n            <mat-grid-tile *ngFor=\"let user of userData\">               \n                {{user.UserFirstName}}\n                {{user.UserEmpId}}\n                {{user.UserCorpId}}\n                {{user.UserMailId}}\n                {{user.UserRole}}\n                {{user.ActiveStatus[0]}}\n            </mat-grid-tile>\n        </mat-grid-list>\n    </ng-container>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent implements OnInit {\n  counter:number=0;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onPlusClick(){\n    this.counter++;\n  }\n\n  onMinusClick(){\n    this.counter--;\n  }\n}\n","<p>counter works!</p>\n<button (click)=\"onPlusClick()\">+</button>&nbsp;\n<label>{{counter}}</label>&nbsp;\n<button (click)=\"onMinusClick()\">-</button>\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\nimport { environment } from '../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  environment = environment;\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  getCsrfToken() {\r\n    const url = `${this.environment.api.baseUrl}${this.environment.api.auth.login}`;\r\n    return this.apiService.fetchGetUrl(url);\r\n  }\r\n\r\n  userAuthentication(data: any): Observable<any> {\r\n    const url = `${this.environment.api.baseUrl}${this.environment.api.auth.userAuthentication}`;\r\n    return this.apiService.fetchPostUrl(url, data);\r\n  }\r\n\r\n  changePassword(data: any): Observable<any> {\r\n    const url = `${this.environment.api.baseUrl}${this.environment.api.auth.changePassword}`;\r\n    return this.apiService.fetchPostUrl(url, data);\r\n  }\r\n\r\n  getJwtToken(data: any): Observable<any> {\r\n    const url = `${this.environment.api.baseUrl}${this.environment.api.auth.jwtToken}`;\r\n    return this.apiService.fetchPostUrl(url, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store, StoreConfig } from '@datorama/akita';\r\n\r\nexport interface UserState {\r\n   user: {};\r\n   isLoaded: boolean;\r\n   csrfToken: string;\r\n   jwtToken: string;\r\n}\r\n\r\nexport function createInitialState(): UserState {\r\n  return {\r\n    user: {},\r\n    isLoaded: false,\r\n    csrfToken: '',\r\n    jwtToken: ''\r\n  };\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ \r\n  name: 'user',\r\n  resettable: true \r\n})\r\nexport class UserStore extends Store<UserState> {\r\n\r\n  constructor() {\r\n    super(createInitialState());\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Query } from '@datorama/akita';\r\nimport { Observable } from 'rxjs';\r\nimport { UserStore, UserState } from './user.store';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserQuery extends Query<UserState> {\r\n\r\n  constructor(\r\n    protected userStore: UserStore\r\n  ) {\r\n    super(userStore);\r\n  }\r\n\r\n  // get user\r\n  getUserDetail(): Observable<any> {\r\n    return this.select(state => state.user);\r\n  }\r\n\r\n  // get user data loading status\r\n  getUserLoadingStatus(): Observable<any> {\r\n    return this.select(state => state.isLoaded)\r\n  }\r\n\r\n  // get CSRF token\r\n  getCsrfToken(): Observable<string> {\r\n    return this.select(state => state.csrfToken);\r\n  }\r\n\r\n  // get JWT token\r\n  getJwtToken(): Observable<string> {\r\n    return this.select(state => state.jwtToken);\r\n  }\r\n\r\n  // update user loading status\r\n  updateUserLoadingStatus(status: boolean): Observable<boolean> {\r\n    return this.userStore.update(state => {\r\n      return {\r\n        isLoaded: status\r\n      }\r\n    })\r\n  }\r\n\r\n  // update user data\r\n  updateUserData(user = {}) {\r\n    this.userStore.update(state => {\r\n      return {\r\n        user: user,\r\n        isLoaded: true\r\n      }\r\n    })\r\n  }\r\n\r\n  // update CSRF token\r\n  updateCsrfToken(token: string) {\r\n    this.userStore.update(state => {\r\n      return {\r\n        csrfToken: token\r\n      }\r\n    })\r\n  }\r\n\r\n  // update JWT token\r\n  updateJwtToken(token: string) {\r\n    console.log('updupdateJwtToken token ', token);\r\n    return this.userStore.update(state => {\r\n      return {\r\n        jwtToken: token\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, take, tap } from 'rxjs/operators';\nimport { UserQuery } from '../../state/user/user.query';\n\nimport * as crypto from 'crypto-js';\n\nimport { AuthService } from '../../services/auth.service';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'lib-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n // @Output() getToken: EventEmitter<string> =   new EventEmitter();\n  @Output() getToken = new EventEmitter<any>();\n\n  environment = environment;\n  loginForm: FormGroup;\n  formError = false;\n  isPasswordErr = false;\n  isRemainingAttempts = false;\n  remainingAttemptsCount = 0;\n  isLocked = false;\n  errMsg = \"\";\n  userNameError = false;\n  isLoaderShow = false;\n\n  constructor(\n    private fBuilder: FormBuilder,\n    private authService: AuthService,\n    private userQuery: UserQuery,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  \n  createForm() {\n    this.loginForm = this.fBuilder.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required],\n      rememberMe: [false]\n    });\n  }\n\n  loginUser() {\n\n    this.showLoader();\n\n    if (!this.loginForm.valid) {\n      this.formError = true;\n    } else {\n      this.formError = false;\n      let pwd = crypto.AES.encrypt(this.loginForm.get('password')?.value, crypto.enc.Utf8.parse(this.environment.keys.ENCRYPT_DECRYPT_KEY), {\n        iv: crypto.enc.Utf8.parse(this.environment.keys.IV),\n        padding: crypto.pad.Pkcs7,\n        mode: crypto.mode.CBC\n      }).toString();\n     \n\n      const authData = {\n        userid: this.loginForm.get('userName')?.value.toLowerCase(),\n        password: pwd\n      }\n\n      \n      this.authService.userAuthentication(authData)\n        .subscribe(res => {\n          this.isPasswordErr = false;\n         \n          if (res.hasOwnProperty('message') && res.message == \"Change User Password\") {\n            const dataToSave = {\n              UserCorpId: this.loginForm.get('userName')?.value.toLowerCase(),\n              UserFirstName: \"\",\n              UserLastName: \"\"\n            }\n            localStorage.setItem('userData', JSON.stringify(dataToSave));\n            this.router.navigate(['/auth/forget-password']);\n          }\n          else {\n            console.log('res ',res[0]);\n            console.log('res token ',res[0].token);\n            //this.userQuery.updateUserData(res[0]);\n            //this.userQuery.updateJwtToken(res[0].token); \n            \n            // this.userQuery.getJwtToken()\n            // .pipe(take(1))\n            // .subscribe(value => console.log('VALUE ',value));\n\n            this.getToken.emit(res[0]);\n\n            const dataToSave = {\n              UserCorpId: res[0].UserCorpId,\n              UserFirstName: res[0].UserFirstName,\n              UserLastName: res[0].UserLastName\n            }\n\n            //console.log(this.userQuery.getJwtToken());\n\n        \n            localStorage.setItem('userData', JSON.stringify(dataToSave));\n            sessionStorage.setItem('authStatus', 'loggedin');\n            this.router.navigate(['/home']);            \n            this.hideLoader();            \n          }\n        }, err => {         \n          this.formError = true;\n\n          if((err.error.error.message === 'Please enter correct Password.') && (err.error.error.hasOwnProperty('remainingAttempts'))) {\n            this.isRemainingAttempts = true;\n            this.isPasswordErr = false;\n            this.isLocked = false;\n            this.userNameError = false;\n            this.remainingAttemptsCount = err.error.error.remainingAttempts;\n          }\n          else if (err.error.error.message === 'Invalid credential. You have been locked out for 2 minutes'){\n            this.isPasswordErr = false;\n            this.isRemainingAttempts = false;\n            this.isLocked = true;\n            this.errMsg = err.error.error.message;\n            this.userNameError = false;\n            this.removeLockStatus()\n          }\n          else {\n            this.errMsg = err.error.error.message;\n            this.isLocked = false;\n            this.isRemainingAttempts = false;\n            this.userNameError = true;\n          }\n          this.hideLoader();\n        });\n    }\n  }\n\n  removeLockStatus() {\n    setTimeout(() => {\n      this.isLocked = false;\n    }, 2000);\n  }\n\n  hideLoader(){\n    setTimeout(() => {\n      this.isLoaderShow = false;\n    }, 10000);\n    //this.isLoaderShow = false;\n  }\n\n  showLoader(){\n    this.isLoaderShow = true;\n  }\n\n\n  ngOnDestroy() {} \n\n}\n","<section class=\"login-wrapper\">\n    <div class=\"overlay\" *ngIf=\"isLoaderShow\">       \n            <mat-progress-spinner [mode]=\"'indeterminate'\" diameter=\"70\" *ngIf=\"isLoaderShow\"></mat-progress-spinner>        \n    </div>\n    \n    <div class=\"login-container\"> \n\n        <img src=\"../../assets/images/cg-logo.svg\" alt=\"Capgemini Logo\" class=\"cg-logo\">\n\n        <h1 class=\"sf-title\">Solution Finder</h1>\n\n        <h2 class=\"sf-title2-desc\">Log In to access your account</h2>\n\n        <form class=\"user-login-form\" [formGroup]=\"loginForm\">\n            <div class=\"auth-inputs\">\n                <div>\n                    <div class=\"input-container\" [class.input-error]=\"formError && (!loginForm.controls.userName.valid || userNameError)\">\n                        <input type=\"text\" placeholder=\"Username\" formControlName=\"userName\">\n                    </div>\n                    <div class=\"input-container\" [class.input-error]=\"formError\">\n                        <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" (keyup.enter)=\"loginUser()\">\n                        <button class=\"forget-pwd-btn\">Forget?</button>\n                    </div>\n                </div>\n                <div class=\"error-msg\" *ngIf=\"isPasswordErr\">\n                    The password is incorrect\n                </div>\n                <div class=\"error-msg\" *ngIf=\"isRemainingAttempts\">\n                    Invalid Login Password {{remainingAttemptsCount}} out of 5. Please provide valid password to process\n                    your login.\n                </div>\n                <div class=\"error-msg\" *ngIf=\"isLocked\">\n                    {{ errMsg }}\n                </div>\n                <div class=\"error-msg\" *ngIf=\"userNameError\">\n                    {{ errMsg }}\n                </div>\n            </div>\n\n            <section class=\"remember-user\">\n                <mat-checkbox color='primary' formControlName=\"rememberMe\">Remember me</mat-checkbox>\n            </section>\n\n            <button class=\"login-btn\" (click)=\"loginUser()\">Login</button>\n        </form> \n\n    </div>\n</section>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibLoginService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-lib-login',\n  template: `\n    <p>\n      lib-login works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class LibLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatCheckboxModule,\r\n    MatSidenavModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatProgressSpinnerModule,\r\n    MatListModule,\r\n    MatGridListModule\r\n  ],\r\n  exports: [\r\n    MatCheckboxModule,\r\n    MatSidenavModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatProgressSpinnerModule,\r\n    MatListModule,\r\n    MatGridListModule\r\n  ]\r\n})\r\nexport class CommonMaterialModule { }\r\n","import { NgModule } from '@angular/core';\nimport { LibLoginComponent } from './lib-login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NG_ENTITY_SERVICE_CONFIG } from '@datorama/akita-ng-entity-service';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\n\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n//import { AuthInterceptor } from './interceptor/auth.interceptor';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CookieModule } from 'ngx-cookie';\nimport { CommonMaterialModule } from '../common/common-material/common-material.module';\nimport { CounterComponent } from './counter/counter.component';\nimport { LoginComponent } from './login/login.component';\nimport { environment } from '../environments/environment';\nimport { UserlistComponent } from './usermanagement/userlist/userlist.component';\n\n\n\n@NgModule({\n  declarations: [\n    LibLoginComponent,\n    LoginComponent,\n    CounterComponent, \n    UserlistComponent,       \n  ],\n  imports: [\n    ReactiveFormsModule,\n    CommonMaterialModule,\n    environment.production ? [] : AkitaNgDevtools.forRoot(),\n    CookieModule.forRoot(),\n    AkitaNgRouterStoreModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: NG_ENTITY_SERVICE_CONFIG, useValue: { baseUrl: 'https://jsonplaceholder.typicode.com' }},\n    //{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    CookieService,\n  ],\n  exports: [\n    LibLoginComponent,\n    LoginComponent,\n    CounterComponent,\n    UserlistComponent,\n  ]\n})\nexport class LibLoginModule { }\n","/*\n * Public API Surface of lib-login\n */\nexport * from './lib/usermanagement/userlist/userlist.component';\nexport * from './lib/counter/counter.component';\nexport * from './lib/login/login.component';\nexport * from './lib/lib-login.service';\nexport * from './lib/lib-login.component';\nexport * from './lib/lib-login.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}