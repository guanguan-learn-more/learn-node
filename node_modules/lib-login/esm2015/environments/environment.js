// This file can be replaced during build by using the `fileReplacements` array.
// `ng build` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
export const environment = {
    production: false,
    api: {
        // baseUrl: "http://localhost:5001",
        baseUrl: "https://solution-finder-demo.capgemini.com:5001",
        auth: {
            login: "/login",
            userAuthentication: "/UserAuthentication",
            changePassword: "/api/changePassword",
            getUsers: "/api/users",
            jwtToken: "/token",
            user_like: "/api/UserFeedBack",
            user_snowlike: "/api/SNOWFeedBack/",
            searchSolution: "/api/SearchSolution",
            searchSolutionDetail: "/api/SearchSolutionById",
            updateUser: "/api/updateUser",
            activeUser: "/api/activateUser/",
            deleteUser: "/api/deleteUser/",
            getUser: "/api/getUser/"
        }
    },
    keys: {
        ENCRYPT_DECRYPT_KEY: "*$0lut!0nf!nder*",
        IV: 'I8zyA4lVhMCaJ5Kg'
    }
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW52aXJvbm1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWItbG9naW4vc3JjL2Vudmlyb25tZW50cy9lbnZpcm9ubWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnRkFBZ0Y7QUFDaEYsbUVBQW1FO0FBQ25FLGdFQUFnRTtBQUVoRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUc7SUFDekIsVUFBVSxFQUFFLEtBQUs7SUFDakIsR0FBRyxFQUFFO1FBQ0gsb0NBQW9DO1FBQ3BDLE9BQU8sRUFBRSxpREFBaUQ7UUFDMUQsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLFFBQVE7WUFDZixrQkFBa0IsRUFBRSxxQkFBcUI7WUFDekMsY0FBYyxFQUFFLHFCQUFxQjtZQUNyQyxRQUFRLEVBQUUsWUFBWTtZQUN0QixRQUFRLEVBQUUsUUFBUTtZQUNsQixTQUFTLEVBQUUsbUJBQW1CO1lBQzlCLGFBQWEsRUFBQyxvQkFBb0I7WUFDbEMsY0FBYyxFQUFFLHFCQUFxQjtZQUNyQyxvQkFBb0IsRUFBRSx5QkFBeUI7WUFDL0MsVUFBVSxFQUFFLGlCQUFpQjtZQUM3QixVQUFVLEVBQUUsb0JBQW9CO1lBQ2hDLFVBQVUsRUFBRSxrQkFBa0I7WUFDOUIsT0FBTyxFQUFDLGVBQWU7U0FDeEI7S0FDRjtJQUNELElBQUksRUFBQztRQUNILG1CQUFtQixFQUFDLGtCQUFrQjtRQUN0QyxFQUFFLEVBQUMsa0JBQWtCO0tBQ3RCO0NBQ0YsQ0FBQztBQUVGOzs7Ozs7R0FNRztBQUNILHNFQUFzRSIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSBjYW4gYmUgcmVwbGFjZWQgZHVyaW5nIGJ1aWxkIGJ5IHVzaW5nIHRoZSBgZmlsZVJlcGxhY2VtZW50c2AgYXJyYXkuXHJcbi8vIGBuZyBidWlsZGAgcmVwbGFjZXMgYGVudmlyb25tZW50LnRzYCB3aXRoIGBlbnZpcm9ubWVudC5wcm9kLnRzYC5cclxuLy8gVGhlIGxpc3Qgb2YgZmlsZSByZXBsYWNlbWVudHMgY2FuIGJlIGZvdW5kIGluIGBhbmd1bGFyLmpzb25gLlxyXG5cclxuZXhwb3J0IGNvbnN0IGVudmlyb25tZW50ID0ge1xyXG4gIHByb2R1Y3Rpb246IGZhbHNlLFxyXG4gIGFwaToge1xyXG4gICAgLy8gYmFzZVVybDogXCJodHRwOi8vbG9jYWxob3N0OjUwMDFcIixcclxuICAgIGJhc2VVcmw6IFwiaHR0cHM6Ly9zb2x1dGlvbi1maW5kZXItZGVtby5jYXBnZW1pbmkuY29tOjUwMDFcIixcclxuICAgIGF1dGg6IHtcclxuICAgICAgbG9naW46IFwiL2xvZ2luXCIsXHJcbiAgICAgIHVzZXJBdXRoZW50aWNhdGlvbjogXCIvVXNlckF1dGhlbnRpY2F0aW9uXCIsXHJcbiAgICAgIGNoYW5nZVBhc3N3b3JkOiBcIi9hcGkvY2hhbmdlUGFzc3dvcmRcIixcclxuICAgICAgZ2V0VXNlcnM6IFwiL2FwaS91c2Vyc1wiLFxyXG4gICAgICBqd3RUb2tlbjogXCIvdG9rZW5cIiwgICAgICBcclxuICAgICAgdXNlcl9saWtlOiBcIi9hcGkvVXNlckZlZWRCYWNrXCIsXHJcbiAgICAgIHVzZXJfc25vd2xpa2U6XCIvYXBpL1NOT1dGZWVkQmFjay9cIiwgICAgICBcclxuICAgICAgc2VhcmNoU29sdXRpb246IFwiL2FwaS9TZWFyY2hTb2x1dGlvblwiLFxyXG4gICAgICBzZWFyY2hTb2x1dGlvbkRldGFpbDogXCIvYXBpL1NlYXJjaFNvbHV0aW9uQnlJZFwiLFxyXG4gICAgICB1cGRhdGVVc2VyOiBcIi9hcGkvdXBkYXRlVXNlclwiLFxyXG4gICAgICBhY3RpdmVVc2VyOiBcIi9hcGkvYWN0aXZhdGVVc2VyL1wiLFxyXG4gICAgICBkZWxldGVVc2VyOiBcIi9hcGkvZGVsZXRlVXNlci9cIixcclxuICAgICAgZ2V0VXNlcjpcIi9hcGkvZ2V0VXNlci9cIlxyXG4gICAgfVxyXG4gIH0sXHJcbiAga2V5czp7XHJcbiAgICBFTkNSWVBUX0RFQ1JZUFRfS0VZOlwiKiQwbHV0ITBuZiFuZGVyKlwiLFxyXG4gICAgSVY6J0k4enlBNGxWaE1DYUo1S2cnXHJcbiAgfVxyXG59O1xyXG5cclxuLypcclxuICogRm9yIGVhc2llciBkZWJ1Z2dpbmcgaW4gZGV2ZWxvcG1lbnQgbW9kZSwgeW91IGNhbiBpbXBvcnQgdGhlIGZvbGxvd2luZyBmaWxlXHJcbiAqIHRvIGlnbm9yZSB6b25lIHJlbGF0ZWQgZXJyb3Igc3RhY2sgZnJhbWVzIHN1Y2ggYXMgYHpvbmUucnVuYCwgYHpvbmVEZWxlZ2F0ZS5pbnZva2VUYXNrYC5cclxuICpcclxuICogVGhpcyBpbXBvcnQgc2hvdWxkIGJlIGNvbW1lbnRlZCBvdXQgaW4gcHJvZHVjdGlvbiBtb2RlIGJlY2F1c2UgaXQgd2lsbCBoYXZlIGEgbmVnYXRpdmUgaW1wYWN0XHJcbiAqIG9uIHBlcmZvcm1hbmNlIGlmIGFuIGVycm9yIGlzIHRocm93bi5cclxuICovXHJcbi8vIGltcG9ydCAnem9uZS5qcy9wbHVnaW5zL3pvbmUtZXJyb3InOyAgLy8gSW5jbHVkZWQgd2l0aCBBbmd1bGFyIENMSS5cclxuIl19