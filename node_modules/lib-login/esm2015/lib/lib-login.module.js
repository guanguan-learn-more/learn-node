import { NgModule } from '@angular/core';
import { LibLoginComponent } from './lib-login.component';
import { ReactiveFormsModule } from '@angular/forms';
import { NG_ENTITY_SERVICE_CONFIG } from '@datorama/akita-ng-entity-service';
import { AkitaNgDevtools } from '@datorama/akita-ngdevtools';
import { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';
import { HttpClientModule } from '@angular/common/http';
//import { AuthInterceptor } from './interceptor/auth.interceptor';
import { CookieService } from 'ngx-cookie-service';
import { CookieModule } from 'ngx-cookie';
import { CommonMaterialModule } from '../common/common-material/common-material.module';
import { CounterComponent } from './counter/counter.component';
import { LoginComponent } from './login/login.component';
import { environment } from '../environments/environment';
import { UserlistComponent } from './usermanagement/userlist/userlist.component';
import * as i0 from "@angular/core";
import * as i1 from "@datorama/akita-ngdevtools";
import * as i2 from "ngx-cookie";
export class LibLoginModule {
}
LibLoginModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: LibLoginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LibLoginModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: LibLoginModule, declarations: [LibLoginComponent,
        LoginComponent,
        CounterComponent,
        UserlistComponent], imports: [ReactiveFormsModule,
        CommonMaterialModule, i1.AkitaNgDevtools, i2.CookieModule, AkitaNgRouterStoreModule,
        HttpClientModule], exports: [LibLoginComponent,
        LoginComponent,
        CounterComponent,
        UserlistComponent] });
LibLoginModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: LibLoginModule, providers: [
        { provide: NG_ENTITY_SERVICE_CONFIG, useValue: { baseUrl: 'https://jsonplaceholder.typicode.com' } },
        //{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },
        CookieService,
    ], imports: [[
            ReactiveFormsModule,
            CommonMaterialModule,
            environment.production ? [] : AkitaNgDevtools.forRoot(),
            CookieModule.forRoot(),
            AkitaNgRouterStoreModule,
            HttpClientModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: LibLoginModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        LibLoginComponent,
                        LoginComponent,
                        CounterComponent,
                        UserlistComponent,
                    ],
                    imports: [
                        ReactiveFormsModule,
                        CommonMaterialModule,
                        environment.production ? [] : AkitaNgDevtools.forRoot(),
                        CookieModule.forRoot(),
                        AkitaNgRouterStoreModule,
                        HttpClientModule
                    ],
                    providers: [
                        { provide: NG_ENTITY_SERVICE_CONFIG, useValue: { baseUrl: 'https://jsonplaceholder.typicode.com' } },
                        //{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },
                        CookieService,
                    ],
                    exports: [
                        LibLoginComponent,
                        LoginComponent,
                        CounterComponent,
                        UserlistComponent,
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLWxvZ2luLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi1sb2dpbi9zcmMvbGliL2xpYi1sb2dpbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFN0QsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGdCQUFnQixFQUFxQixNQUFNLHNCQUFzQixDQUFDO0FBQzNFLG1FQUFtRTtBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFlBQVksQ0FBQztBQUMxQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN4RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDOzs7O0FBK0JqRixNQUFNLE9BQU8sY0FBYzs7NEdBQWQsY0FBYzs2R0FBZCxjQUFjLGlCQXpCdkIsaUJBQWlCO1FBQ2pCLGNBQWM7UUFDZCxnQkFBZ0I7UUFDaEIsaUJBQWlCLGFBR2pCLG1CQUFtQjtRQUNuQixvQkFBb0IsdUNBR3BCLHdCQUF3QjtRQUN4QixnQkFBZ0IsYUFRaEIsaUJBQWlCO1FBQ2pCLGNBQWM7UUFDZCxnQkFBZ0I7UUFDaEIsaUJBQWlCOzZHQUdSLGNBQWMsYUFaZDtRQUNULEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLFFBQVEsRUFBRSxFQUFFLE9BQU8sRUFBRSxzQ0FBc0MsRUFBRSxFQUFDO1FBQ25HLHlFQUF5RTtRQUN6RSxhQUFhO0tBQ2QsWUFaUTtZQUNQLG1CQUFtQjtZQUNuQixvQkFBb0I7WUFDcEIsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFO1lBQ3ZELFlBQVksQ0FBQyxPQUFPLEVBQUU7WUFDdEIsd0JBQXdCO1lBQ3hCLGdCQUFnQjtTQUNqQjs0RkFhVSxjQUFjO2tCQTNCMUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osaUJBQWlCO3dCQUNqQixjQUFjO3dCQUNkLGdCQUFnQjt3QkFDaEIsaUJBQWlCO3FCQUNsQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsbUJBQW1CO3dCQUNuQixvQkFBb0I7d0JBQ3BCLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRTt3QkFDdkQsWUFBWSxDQUFDLE9BQU8sRUFBRTt3QkFDdEIsd0JBQXdCO3dCQUN4QixnQkFBZ0I7cUJBQ2pCO29CQUNELFNBQVMsRUFBRTt3QkFDVCxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxRQUFRLEVBQUUsRUFBRSxPQUFPLEVBQUUsc0NBQXNDLEVBQUUsRUFBQzt3QkFDbkcseUVBQXlFO3dCQUN6RSxhQUFhO3FCQUNkO29CQUNELE9BQU8sRUFBRTt3QkFDUCxpQkFBaUI7d0JBQ2pCLGNBQWM7d0JBQ2QsZ0JBQWdCO3dCQUNoQixpQkFBaUI7cUJBQ2xCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExpYkxvZ2luQ29tcG9uZW50IH0gZnJvbSAnLi9saWItbG9naW4uY29tcG9uZW50JztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBOR19FTlRJVFlfU0VSVklDRV9DT05GSUcgfSBmcm9tICdAZGF0b3JhbWEvYWtpdGEtbmctZW50aXR5LXNlcnZpY2UnO1xuaW1wb3J0IHsgQWtpdGFOZ0RldnRvb2xzIH0gZnJvbSAnQGRhdG9yYW1hL2FraXRhLW5nZGV2dG9vbHMnO1xuXG5pbXBvcnQgeyBBa2l0YU5nUm91dGVyU3RvcmVNb2R1bGUgfSBmcm9tICdAZGF0b3JhbWEvYWtpdGEtbmctcm91dGVyLXN0b3JlJztcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUsIEhUVFBfSU5URVJDRVBUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuLy9pbXBvcnQgeyBBdXRoSW50ZXJjZXB0b3IgfSBmcm9tICcuL2ludGVyY2VwdG9yL2F1dGguaW50ZXJjZXB0b3InO1xuaW1wb3J0IHsgQ29va2llU2VydmljZSB9IGZyb20gJ25neC1jb29raWUtc2VydmljZSc7XG5pbXBvcnQgeyBDb29raWVNb2R1bGUgfSBmcm9tICduZ3gtY29va2llJztcbmltcG9ydCB7IENvbW1vbk1hdGVyaWFsTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi1tYXRlcmlhbC9jb21tb24tbWF0ZXJpYWwubW9kdWxlJztcbmltcG9ydCB7IENvdW50ZXJDb21wb25lbnQgfSBmcm9tICcuL2NvdW50ZXIvY291bnRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTG9naW5Db21wb25lbnQgfSBmcm9tICcuL2xvZ2luL2xvZ2luLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBlbnZpcm9ubWVudCB9IGZyb20gJy4uL2Vudmlyb25tZW50cy9lbnZpcm9ubWVudCc7XG5pbXBvcnQgeyBVc2VybGlzdENvbXBvbmVudCB9IGZyb20gJy4vdXNlcm1hbmFnZW1lbnQvdXNlcmxpc3QvdXNlcmxpc3QuY29tcG9uZW50JztcblxuXG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIExpYkxvZ2luQ29tcG9uZW50LFxuICAgIExvZ2luQ29tcG9uZW50LFxuICAgIENvdW50ZXJDb21wb25lbnQsIFxuICAgIFVzZXJsaXN0Q29tcG9uZW50LCAgICAgICBcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgQ29tbW9uTWF0ZXJpYWxNb2R1bGUsXG4gICAgZW52aXJvbm1lbnQucHJvZHVjdGlvbiA/IFtdIDogQWtpdGFOZ0RldnRvb2xzLmZvclJvb3QoKSxcbiAgICBDb29raWVNb2R1bGUuZm9yUm9vdCgpLFxuICAgIEFraXRhTmdSb3V0ZXJTdG9yZU1vZHVsZSxcbiAgICBIdHRwQ2xpZW50TW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHsgcHJvdmlkZTogTkdfRU5USVRZX1NFUlZJQ0VfQ09ORklHLCB1c2VWYWx1ZTogeyBiYXNlVXJsOiAnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tJyB9fSxcbiAgICAvL3sgcHJvdmlkZTogSFRUUF9JTlRFUkNFUFRPUlMsIHVzZUNsYXNzOiBBdXRoSW50ZXJjZXB0b3IsIG11bHRpOiB0cnVlIH0sXG4gICAgQ29va2llU2VydmljZSxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIExpYkxvZ2luQ29tcG9uZW50LFxuICAgIExvZ2luQ29tcG9uZW50LFxuICAgIENvdW50ZXJDb21wb25lbnQsXG4gICAgVXNlcmxpc3RDb21wb25lbnQsXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTGliTG9naW5Nb2R1bGUgeyB9XG4iXX0=